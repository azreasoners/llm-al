% Query 1: One missionary crosses alone from bank1 to bank2. (satisfiable)
:- query
    0: numMissAt(bank1)=3 & numCannAt(bank1)=3 & numMissAt(bank2)=0 & numCannAt(bank2)=0 & loc(rowboat)=bank1;
    0: cross(rowboat);
    0: numMissCrossing(rowboat)=1 & numCannCrossing(rowboat)=0;
    maxstep: numMissAt(bank1)=2 & numCannAt(bank1)=3 & numMissAt(bank2)=1 & numCannAt(bank2)=0 & loc(rowboat)=bank2.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 2: Attempting to cross the river with an empty boat. (unsatisfiable)
:- query
    0: numMissAt(bank1)=3 & numCannAt(bank1)=3 & numMissAt(bank2)=0 & numCannAt(bank2)=0 & loc(rowboat)=bank1;
    0: cross(rowboat);
    0: numMissCrossing(rowboat)=0 & numCannCrossing(rowboat)=0.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 3: Two cannibals cross from bank1 to bank2 together. (satisfiable)
:- query
    0: numMissAt(bank1)=3 & numCannAt(bank1)=3 & numMissAt(bank2)=0 & numCannAt(bank2)=0 & loc(rowboat)=bank1;
    0: cross(rowboat);
    0: numMissCrossing(rowboat)=0 & numCannCrossing(rowboat)=2;
    maxstep: numMissAt(bank1)=3 & numCannAt(bank1)=1 & numMissAt(bank2)=0 & numCannAt(bank2)=2 & loc(rowboat)=bank2.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  loc(rowboat)=bank1 numCannAt(bank1)=3 numCannAt(bank2)=0 numMissAt(bank1)=3 numMissAt(bank2)=0

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=2 numMissCrossing(rowboat)=0

	1:  loc(rowboat)=bank2 numCannAt(bank1)=1 numCannAt(bank2)=2 numMissAt(bank1)=3 numMissAt(bank2)=0

SATISFIABLE
Models       : 1


% Query 4: Two missionaries and one cannibal attempt to cross together, exceeding boat capacity. (unsatisfiable)
:- query
    0: numMissAt(bank1)=3 & numCannAt(bank1)=3 & numMissAt(bank2)=0 & numCannAt(bank2)=0 & loc(rowboat)=bank1;
    0: cross(rowboat);
    0: numMissCrossing(rowboat)=2 & numCannCrossing(rowboat)=1.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 5: One missionary and one cannibal cross together from bank1 to bank2. (satisfiable)
:- query
    0: numMissAt(bank1)=3 & numCannAt(bank1)=3 & numMissAt(bank2)=0 & numCannAt(bank2)=0 & loc(rowboat)=bank1;
    0: cross(rowboat);
    0: numMissCrossing(rowboat)=1 & numCannCrossing(rowboat)=1;
    maxstep: numMissAt(bank1)=2 & numCannAt(bank1)=2 & numMissAt(bank2)=1 & numCannAt(bank2)=1 & loc(rowboat)=bank2.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  loc(rowboat)=bank1 numCannAt(bank1)=3 numCannAt(bank2)=0 numMissAt(bank1)=3 numMissAt(bank2)=0

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=1 numMissCrossing(rowboat)=1

	1:  loc(rowboat)=bank2 numCannAt(bank1)=2 numCannAt(bank2)=1 numMissAt(bank1)=2 numMissAt(bank2)=1

SATISFIABLE
Models       : 1




:- query
    0: numMissAt(bank1) = 3 & numCannAt(bank1) = 3 & numMissAt(bank2) = 0 & numCannAt(bank2) = 0 & loc(rowboat) = bank1;
    maxstep: numMissAt(bank2) = 3 & numCannAt(bank2) = 3 & loc(rowboat) = bank2.


Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  loc(rowboat)=bank1 numCannAt(bank1)=3 numCannAt(bank2)=0 numMissAt(bank1)=3 numMissAt(bank2)=0

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=2 numMissCrossing(rowboat)=0

	1:  loc(rowboat)=bank2 numCannAt(bank1)=1 numCannAt(bank2)=2 numMissAt(bank1)=3 numMissAt(bank2)=0

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=1 numMissCrossing(rowboat)=0

	2:  loc(rowboat)=bank1 numCannAt(bank1)=2 numCannAt(bank2)=1 numMissAt(bank1)=3 numMissAt(bank2)=0

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=2 numMissCrossing(rowboat)=0

	3:  loc(rowboat)=bank2 numCannAt(bank1)=0 numCannAt(bank2)=3 numMissAt(bank1)=3 numMissAt(bank2)=0

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=1 numMissCrossing(rowboat)=0

	4:  loc(rowboat)=bank1 numCannAt(bank1)=1 numCannAt(bank2)=2 numMissAt(bank1)=3 numMissAt(bank2)=0

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=0 numMissCrossing(rowboat)=2

	5:  loc(rowboat)=bank2 numCannAt(bank1)=1 numCannAt(bank2)=2 numMissAt(bank1)=1 numMissAt(bank2)=2

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=1 numMissCrossing(rowboat)=1

	6:  loc(rowboat)=bank1 numCannAt(bank1)=2 numCannAt(bank2)=1 numMissAt(bank1)=2 numMissAt(bank2)=1

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=0 numMissCrossing(rowboat)=2

	7:  loc(rowboat)=bank2 numCannAt(bank1)=2 numCannAt(bank2)=1 numMissAt(bank1)=0 numMissAt(bank2)=3

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=1 numMissCrossing(rowboat)=0

	8:  loc(rowboat)=bank1 numCannAt(bank1)=3 numCannAt(bank2)=0 numMissAt(bank1)=0 numMissAt(bank2)=3

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=2 numMissCrossing(rowboat)=0

	9:  loc(rowboat)=bank2 numCannAt(bank1)=1 numCannAt(bank2)=2 numMissAt(bank1)=0 numMissAt(bank2)=3

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=1 numMissCrossing(rowboat)=0

	10:  loc(rowboat)=bank1 numCannAt(bank1)=2 numCannAt(bank2)=1 numMissAt(bank1)=0 numMissAt(bank2)=3

	ACTIONS:  cross(rowboat) numCannCrossing(rowboat)=2 numMissCrossing(rowboat)=0

	11:  loc(rowboat)=bank2 numCannAt(bank1)=0 numCannAt(bank2)=3 numMissAt(bank1)=0 numMissAt(bank2)=3

SATISFIABLE
Models       : 1+

