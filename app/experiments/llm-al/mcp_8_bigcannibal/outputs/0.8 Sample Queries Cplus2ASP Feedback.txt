% Query 1: Attempt to cross the river with no one in the boat (unsatisfiable)
:- query
    0: numAt(missionary, bank1) = 3 & numAt(cannibal, bank1) = 2 & numAt(bigCannibal, bank1) = 1 & boatLoc = bank1;
    0: cross(boat);
    0: numCrossing(boat, missionary) = 0 & numCrossing(boat, cannibal) = 0 & numCrossing(boat, bigCannibal) = 0.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 2: Cross the river with the bigCannibal alone from bank1 to bank2 (satisfiable)
:- query
    0: numAt(missionary, bank1) = 3 & numAt(cannibal, bank1) = 2 & numAt(bigCannibal, bank1) = 1 & boatLoc = bank1;
    0: cross(boat);
    0: numCrossing(boat, bigCannibal) = 1 & numCrossing(boat, missionary) = 0 & numCrossing(boat, cannibal) = 0.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  boatLoc=bank1 numAt(bigCannibal, bank1)=1 numAt(bigCannibal, bank2)=-2 numAt(cannibal, bank1)=2 numAt(cannibal, bank2)=-1 numAt(missionary, bank1)=3 numAt(missionary, bank2)=-1

	ACTIONS:  cross(boat) numCrossing(boat, bigCannibal)=1 numCrossing(boat, cannibal)=0 numCrossing(boat, missionary)=0

	1:  boatLoc=bank2 numAt(bigCannibal, bank1)=0 numAt(bigCannibal, bank2)=-1 numAt(cannibal, bank1)=2 numAt(cannibal, bank2)=-1 numAt(missionary, bank1)=3 numAt(missionary, bank2)=-1

SATISFIABLE
Models       : 1+


% Query 3: Try to have bigCannibal cross with another person in the boat from bank1 to bank2 (unsatisfiable)
:- query
    0: numAt(missionary, bank1) = 3 & numAt(cannibal, bank1) = 2 & numAt(bigCannibal, bank1) = 1 & boatLoc = bank1;
    0: cross(boat);
    0: numCrossing(boat, bigCannibal) = 1 & numCrossing(boat, cannibal) = 1 & numCrossing(boat, missionary) = 0.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 4: Try to cross the river with three people in the boat (unsatisfiable)
:- query
    0: numAt(missionary, bank1) = 3 & numAt(cannibal, bank1) = 2 & numAt(bigCannibal, bank1) = 1 & boatLoc = bank1;
    0: cross(boat);
    0: numCrossing(boat, missionary) = 1 & numCrossing(boat, cannibal) = 2 & numCrossing(boat, bigCannibal) = 0.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 5: Attempt to have cannibals outnumber missionaries on the boat (satisfiable)
:- query
    0: numAt(missionary, bank1) = 3 & numAt(cannibal, bank1) = 2 & numAt(bigCannibal, bank1) = 1 & boatLoc = bank1;
    0: cross(boat);
    0: numCrossing(boat, missionary) = 0 & numCrossing(boat, cannibal) = 2 & numCrossing(boat, bigCannibal) = 0.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  boatLoc=bank1 numAt(bigCannibal, bank1)=1 numAt(bigCannibal, bank2)=-2 numAt(cannibal, bank1)=2 numAt(cannibal, bank2)=-2 numAt(missionary, bank1)=3 numAt(missionary, bank2)=0

	ACTIONS:  cross(boat) numCrossing(boat, bigCannibal)=0 numCrossing(boat, cannibal)=2 numCrossing(boat, missionary)=0

	1:  boatLoc=bank2 numAt(bigCannibal, bank1)=1 numAt(bigCannibal, bank2)=-2 numAt(cannibal, bank1)=0 numAt(cannibal, bank2)=0 numAt(missionary, bank1)=3 numAt(missionary, bank2)=0

SATISFIABLE
Models       : 1+




:- query
    0: numAt(missionary, bank1) = 3 & numAt(cannibal, bank1) = 2 & numAt(bigCannibal, bank1) = 1 & boatLoc = bank1;
    maxstep: numAt(missionary, bank2) = 3 & numAt(cannibal, bank2) = 2 & numAt(bigCannibal, bank2) = 1 & boatLoc = bank2.


Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  boatLoc=bank1 numAt(bigCannibal, bank1)=1 numAt(bigCannibal, bank2)=1 numAt(cannibal, bank1)=2 numAt(cannibal, bank2)=1 numAt(missionary, bank1)=3 numAt(missionary, bank2)=3

	ACTIONS:  cross(boat) numCrossing(boat, bigCannibal)=0 numCrossing(boat, cannibal)=1 numCrossing(boat, missionary)=0

	1:  boatLoc=bank2 numAt(bigCannibal, bank1)=1 numAt(bigCannibal, bank2)=1 numAt(cannibal, bank1)=1 numAt(cannibal, bank2)=2 numAt(missionary, bank1)=3 numAt(missionary, bank2)=3

SATISFIABLE
Models       : 1+

