% Query 1: Attempt to cross three people in the boat for set s1 (exceeds capacity, unsatisfiable)
:- query
    0: numAt(s1, missionaries, bank1) = 3 & numAt(s1, cannibals, bank1) = 3 & boatLoc(s1) = bank1;
    0: cross(s1) & dest(s1) = bank2 &
       numCrossing(s1, missionaries) = 2 & numCrossing(s1, cannibals) = 1.

% Query 2: Attempt to cross the river with no people in the boat for set s1 (boat cannot cross empty, unsatisfiable)
:- query
    0: numAt(s1, missionaries, bank1) = 3 & numAt(s1, cannibals, bank1) = 3 & boatLoc(s1) = bank1;
    0: cross(s1) & dest(s1) = bank2 &
       numCrossing(s1, missionaries) = 0 & numCrossing(s1, cannibals) = 0.

% Query 3: Attempt to cross the river to the same bank where the boat is currently located for set s1 (unsatisfiable)
:- query
    0: numAt(s1, missionaries, bank1) = 3 & numAt(s1, cannibals, bank1) = 3 & boatLoc(s1) = bank1;
    0: cross(s1) & dest(s1) = bank1 &
       numCrossing(s1, missionaries) = 1 & numCrossing(s1, cannibals) = 1.

% Query 4: Attempt to cross with a negative number of missionaries for set s1 (negative numbers not allowed, unsatisfiable)
:- query
    0: numAt(s1, missionaries, bank1) = 3 & boatLoc(s1) = bank1;
    0: cross(s1) & dest(s1) = bank2 &
       numCrossing(s1, missionaries) = -1 & numCrossing(s1, cannibals) = 1.

% Query 5: Move one missionary and one cannibal from bank1 to bank2 for set s1 (valid crossing, satisfiable)
:- query
    0: numAt(s1, missionaries, bank1) = 3 & numAt(s1, cannibals, bank1) = 3 & boatLoc(s1) = bank1 &
       numAt(s1, missionaries, bank2) = 0 & numAt(s1, cannibals, bank2) = 0;
    0: cross(s1) & dest(s1) = bank2 &
       numCrossing(s1, missionaries) = 1 & numCrossing(s1, cannibals) = 1;
    1: numAt(s1, missionaries, bank1) = 2 & numAt(s1, cannibals, bank1) = 2 &
       numAt(s1, missionaries, bank2) = 1 & numAt(s1, cannibals, bank2) = 1 & boatLoc(s1) = bank2.