% Query 1: Two people at the same location as the boat cross to the other bank (satisfiable)
:- query
    0: loc(missionary1) = bank1 & loc(cannibal1) = bank1 & loc(boat) = bank1 & 
       num_missionaries(bank1) = 1 & num_cannibals(bank1) = 1 & num_missionaries(bank2) = 0 & num_cannibals(bank2) = 0;
    0: cross(missionary1, cannibal1).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 2: Attempt to cross two people when one of them is not at the same location as the boat (unsatisfiable)
:- query
    0: loc(missionary1) = bank1 & loc(cannibal1) = bank2 & loc(boat) = bank1 & 
       num_missionaries(bank1) = 1 & num_cannibals(bank1) = 0 & num_missionaries(bank2) = 0 & num_cannibals(bank2) = 1;
    0: cross(missionary1, cannibal1).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 3: Attempt to cross when the boat is at a different location than the people (unsatisfiable)
:- query
    0: loc(missionary1) = bank1 & loc(cannibal1) = bank1 & loc(boat) = bank2 & 
       num_missionaries(bank1) = 1 & num_cannibals(bank1) = 1 & num_missionaries(bank2) = 0 & num_cannibals(bank2) = 0;
    0: cross(missionary1, cannibal1).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 4: One person crosses alone by having both positions as the same person (satisfiable)
:- query
    0: loc(cannibal2) = bank1 & loc(boat) = bank1 & num_cannibals(bank1) = 1 & num_missionaries(bank1) = 0 &
       num_cannibals(bank2) = 0 & num_missionaries(bank2) = 0;
    0: cross(cannibal2, cannibal2).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 5: Attempt to cross when neither person is at the boat's location (unsatisfiable)
:- query
    0: loc(missionary2) = bank2 & loc(cannibal2) = bank2 & loc(boat) = bank1 & 
       num_missionaries(bank2) = 1 & num_cannibals(bank2) = 1 & num_missionaries(bank1) = 0 & num_cannibals(bank1) = 0;
    0: cross(missionary2, cannibal2).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.






% Original natural language query: Three missionaries and three cannibals are at location bank1. The boat is at location bank1. Find a plan so that all missionaries and all cannibals are at location bank2.
:- query
    0: loc(small_missionary) = bank1 & loc(missionary1) = bank1 & loc(missionary2) = bank1 &
       loc(big_cannibal) = bank1 & loc(cannibal1) = bank1 & loc(cannibal2) = bank1 & loc(boat) = bank1 &
       num_missionaries(bank1) = 3 & num_cannibals(bank1) = 3 &
       num_missionaries(bank2) = 0 & num_cannibals(bank2) = 0;
    maxstep: loc(small_missionary) = bank2 & loc(missionary1) = bank2 & loc(missionary2) = bank2 &
             loc(big_cannibal) = bank2 & loc(cannibal1) = bank2 & loc(cannibal2) = bank2 &
             num_missionaries(bank2) = 3 & num_cannibals(bank2) = 3 &
             num_missionaries(bank1) = 0 & num_cannibals(bank1) = 0.


Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.


