% PROGRAM CHANGED? [UNCHANGED]
% BC+ signature
:- sorts
    vessel;
    location;
    group;
    integer.

% Objects
:- objects
    boat :: vessel;
    bank1, bank2 :: location;
    missionaries, cannibals :: group;
    0..4 :: integer;   % Adjusted integer range to 0..4

% Variables
:- variables
     V, V1, V2, V3, V4 :: vessel;
     Loc, Loc1, Loc2, Loc3, Loc4 :: location;
     G, G1, G2, G3, G4 :: group;
     N, N1, N2, N3, N4, M, C :: integer.

% Constants
:- constants
     loc(vessel) :: inertialFluent(location);
     numOn(location, group) :: additiveFluent(integer);
     cross(vessel) :: exogenousAction;
     numMoving(vessel, group) :: attribute(integer) of cross(vessel);
     movingTo(vessel) :: attribute(location) of cross(vessel).

% Generated constraints

% 1. Crossing the river in a vessel causes the location of the vessel to change to movingTo(Vessel).
     cross(V) causes loc(V) = Loc if movingTo(V) = Loc.

% 2. Crossing the river in a vessel causes the number of people of each group at the starting location to decrease by numMoving(Vessel, Group).
     cross(V) decrements numOn(Loc, G) by N if loc(V) = Loc & numMoving(V, G) = N.

% 3. Crossing the river in a vessel causes the number of people of each group at the movingTo location to increase by numMoving(Vessel, Group).
     cross(V) increments numOn(Loc, G) by N if movingTo(V) = Loc & numMoving(V, G) = N.

% 4. The cross action is not executable if the sum of numMoving(Vessel, missionaries) and numMoving(Vessel, cannibals) is zero.
     nonexecutable cross(V) if N1 + N2 = 0 & numMoving(V, missionaries) = N1 & numMoving(V, cannibals) = N2.

% 5. The cross action is not executable if the sum of numMoving(Vessel, missionaries) and numMoving(Vessel, cannibals) is greater than two.
     nonexecutable cross(V) if N1 + N2 > 2 & numMoving(V, missionaries) = N1 & numMoving(V, cannibals) = N2.

% 6. The cross action is not executable if numMoving(Vessel, Group) is negative for any group.
     nonexecutable cross(V) if numMoving(V, G) = N & N < 0.

% 7. The cross action is not executable if numMoving(Vessel, Group) exceeds the number of people of that group at the current location of the vessel.
     nonexecutable cross(V) if numMoving(V, G) = M & loc(V) = Loc & numOn(Loc, G) = N & M > N.

% 8. The cross action is not executable if movingTo(Vessel) is the same as the current location of the vessel.
     nonexecutable cross(V) if loc(V) = Loc & movingTo(V) = Loc.

% 9. It is impossible for cannibals to outnumber missionaries on any bank where there are missionaries.
     impossible numOn(Loc, missionaries) = M & M > 0 & numOn(Loc, cannibals) = C & C > M.

% 10. The cross action is not executable if cannibals moving on the boat outnumber missionaries moving on the boat when there are missionaries on the boat.
     nonexecutable cross(V) if numMoving(V, missionaries) = M & M > 0 & numMoving(V, cannibals) = C & C > M.

% 11. It is impossible for the number of people of any group on any bank to be negative.
     impossible numOn(Loc, G) = N & N < 0.

% MAIN QUERY CHANGED? [CHANGED]
:- query
    0: numOn(bank1, missionaries) = 4 & numOn(bank1, cannibals) = 4 & numOn(bank2, missionaries) = 0 & numOn(bank2, cannibals) = 0 & loc(boat) = bank1;
    length :: 15;
    maxstep: numOn(bank2, missionaries) = 4 & numOn(bank2, cannibals) = 4.

% SAMPLE QUERIES CHANGED? [UNCHANGED]
% Query 1: One cannibal crosses alone from bank1 to bank2. (satisfiable)
:- query
    0: loc(boat) = bank1 & numOn(bank1, cannibals) = 4 & numOn(bank1, missionaries) = 4 & numOn(bank2, cannibals) = 0 & numOn(bank2, missionaries) = 0;
    0: cross(boat);
    0: numMoving(boat, cannibals) = 1 & numMoving(boat, missionaries) = 0 & movingTo(boat) = bank2.

% Query 2: Two cannibals cross together from bank1 to bank2. (satisfiable)
:- query
    0: loc(boat) = bank1 & numOn(bank1, cannibals) = 4 & numOn(bank1, missionaries) = 4 & numOn(bank2, cannibals) = 0 & numOn(bank2, missionaries) = 0;
    0: cross(boat);
    0: numMoving(boat, cannibals) = 2 & numMoving(boat, missionaries) = 0 & movingTo(boat) = bank2.

% Query 3: Three cannibals try to cross together from bank1 to bank2. (unsatisfiable)
:- query
    0: loc(boat) = bank1 & numOn(bank1, cannibals) = 4 & numOn(bank1, missionaries) = 4 & numOn(bank2, cannibals) = 0 & numOn(bank2, missionaries) = 0;
    0: cross(boat);
    0: numMoving(boat, cannibals) = 3 & numMoving(boat, missionaries) = 0 & movingTo(boat) = bank2.

% Query 4: Two cannibals cross to bank2 where they will outnumber missionaries there. (unsatisfiable)
:- query
    0: loc(boat) = bank1 & numOn(bank1, cannibals) = 3 & numOn(bank1, missionaries) = 3 & numOn(bank2, cannibals) = 1 & numOn(bank2, missionaries) = 1 & loc(boat)=bank1;
    0: cross(boat);
    0: numMoving(boat, cannibals) = 2 & numMoving(boat, missionaries) = 0 & movingTo(boat) = bank2.

% Query 5: The boat tries to cross with zero people on it. (unsatisfiable)
:- query
    0: loc(boat) = bank1 & numOn(bank1, cannibals) = 4 & numOn(bank1, missionaries) = 4 & numOn(bank2, cannibals) = 0 & numOn(bank2, missionaries) = 0;
    0: cross(boat);
    0: numMoving(boat, cannibals) = 0 & numMoving(boat, missionaries) = 0 & movingTo(boat) = bank2.