:- sorts
    vessel;
    location;
    group;
    integer.



:- objects
    boat1 :: vessel;
    bank1, bank2 :: location;
    missionaries, cannibals :: group;
    0..12 :: integer.



:- constants
    loc(vessel) :: inertialFluent(location);
    numAt(group, location) :: additiveFluent(integer);
    capacity(vessel) :: inertialFluent(integer);
    cross(vessel) :: exogenousAction;
    transporting(vessel, group) :: attribute(integer) of cross(vessel).



:- variables
    V, V1, V2, V3, V4 :: vessel;
    Loc, Loc1, Loc2, Loc3, Loc4 :: location;
    G, G1, G2, G3, G4 :: group;
    N, N1, N2, N3, N4, N_c, N_c1, N_c2, N_m, N_m1, N_m2 :: integer;
    Bool, Bool1, Bool2, Bool3, Bool4 :: boolean.

% Generated constraints

% 1. Crossing a vessel causes its loc(vessel) to change to the other bank.
cross(V) causes loc(V) = bank2 if loc(V) = bank1.
cross(V) causes loc(V) = bank1 if loc(V) = bank2.

% 2. Crossing a vessel causes numAt(group, loc(V)) to decrease by transporting(vessel, group).
cross(V) decrements numAt(G, loc(V)) by N if transporting(V, G) = N.

% 3. Crossing a vessel causes numAt(group, the other bank) to increase by transporting(vessel, group).
cross(V) increments numAt(G, bank2) by N if transporting(V, G) = N & loc(V) = bank1.
cross(V) increments numAt(G, bank1) by N if transporting(V, G) = N & loc(V) = bank2.

% 4. The action cross(vessel) is not executable if the sum of transporting(vessel, missionaries) and transporting(vessel, cannibals) is zero.
nonexecutable cross(V) if N1 + N2 = 0 & N1 = transporting(V, missionaries) & N2 = transporting(V, cannibals).

% 5. The action cross(vessel) is not executable if the sum of transporting(vessel, group) exceeds capacity(vessel).
nonexecutable cross(V) if N1 + N2 > N3 & N1 = transporting(V, missionaries) & N2 = transporting(V, cannibals) & N3 = capacity(V).

% 6. The action cross(vessel) is not executable if transporting(vessel, group) exceeds numAt(group, loc(V)) for any group.
nonexecutable cross(V) if N1 > N2 & N1 = transporting(V, G) & N2 = numAt(G, loc(V)).

% 7. The action cross(vessel) is not executable if transporting(V, G) is negative for any group.
nonexecutable cross(V) if N1 < 0 & N1 = transporting(V, G).

% 8. It is impossible for numAt(cannibals, location) to exceed numAt(missionaries, location) at any location where numAt(missionaries, location) is greater than zero.
impossible numAt(cannibals, Loc) > numAt(missionaries, Loc) & numAt(missionaries, Loc) > 0.

% 9. The action cross(vessel) is not executable if transporting(vessel, cannibals) exceeds transporting(vessel, missionaries) during the crossing when transporting(vessel, missionaries) is greater than zero.
nonexecutable cross(V) if N_c > N_m & N_m > 0 & N_c = transporting(V, cannibals) & N_m = transporting(V, missionaries).

% 13. The capacity of the vessel is 3.
capacity(boat1) = 3.

% 16. The numAt(group, location) is always between 0 and 6 inclusive for each group.
impossible numAt(G, Loc) < 0.
impossible numAt(G, Loc) > 6.

% (Removed constraint 17)
% The constraints enforcing that the total number of missionaries and cannibals must sum to 6
% were removed, as during transitions these totals may temporarily be less than 6 when people are
% on the boat in transit.


:- query
    0: numAt(missionaries, bank1) = 6 & numAt(cannibals, bank1) = 6 & numAt(missionaries, bank2) = 0 & numAt(cannibals, bank2) = 0 & loc(boat1) = bank1;
    maxstep: numAt(missionaries, bank2) = 6 & numAt(cannibals, bank2) = 6 & numAt(missionaries, bank1) = 0 & numAt(cannibals, bank1) = 0.
