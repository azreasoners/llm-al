% Sample Query 1: Test that crossing the boat with one person is allowed. Specifically, move one missionary (m1) from bank1 to bank2. (satisfiable)
:- query
    0: loc_member(m1) = bank1 & loc_member(m2) = bank1 & loc_member(m3) = bank1 &
       loc_member(c1) = bank1 & loc_member(c2) = bank1 & loc_member(c3) = bank1 &
       loc_vessel(boat) = bank1 &
       hasHat(m1) = hat1 & hasHat(m2) = hat2 & hasHat(m3) = hat3 &
       hasHat(c1) = hat4 & hasHat(c2) = hat5 & hasHat(c3) = hat6 &
       numMissionariesAt(bank1) = 3 & numMissionariesAt(bank2) = 0 &
       numCannibalsAt(bank1) = 3 & numCannibalsAt(bank2) = 0;
    0: cross(boat) & onboard(boat, m1);
    maxstep: loc_member(m1) = bank2 &
             numMissionariesAt(bank1) = 2 & numMissionariesAt(bank2) = 1 &
             numCannibalsAt(bank1) = 3 & numCannibalsAt(bank2) = 0.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Sample Query 2: Test that crossing the boat with no members onboard is not allowed. (unsatisfiable)
:- query
    0: loc_member(m1) = bank1 & loc_member(m2) = bank1 & loc_member(m3) = bank1 &
       loc_member(c1) = bank1 & loc_member(c2) = bank1 & loc_member(c3) = bank1 &
       loc_vessel(boat) = bank1 &
       hasHat(m1) = hat1 & hasHat(m2) = hat2 & hasHat(m3) = hat3 &
       hasHat(c1) = hat4 & hasHat(c2) = hat5 & hasHat(c3) = hat6 &
       numMissionariesAt(bank1) = 3 & numMissionariesAt(bank2) = 0 &
       numCannibalsAt(bank1) = 3 & numCannibalsAt(bank2) = 0;
    0: cross(boat);
    maxstep: loc_vessel(boat) = bank2.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank1 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank1 loc_vessel(boat)=bank1 numCannibalsAt(bank1)=3 numCannibalsAt(bank2)=0 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

	ACTIONS:  cross(boat) onboard(boat, c2)

	1:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank2 loc_member(c3)=bank1 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank1 loc_vessel(boat)=bank2 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

SATISFIABLE
Models       : 1+


% Sample Query 3: Test that crossing the boat with three members onboard is not allowed. (unsatisfiable)
:- query
    0: loc_member(m1) = bank1 & loc_member(m2) = bank1 & loc_member(m3) = bank1 &
       loc_member(c1) = bank1 & loc_member(c2) = bank1 & loc_member(c3) = bank1 &
       loc_vessel(boat) = bank1 &
       hasHat(m1) = hat1 & hasHat(m2) = hat2 & hasHat(m3) = hat3 &
       hasHat(c1) = hat4 & hasHat(c2) = hat5 & hasHat(c3) = hat6 &
       numMissionariesAt(bank1) = 3 & numMissionariesAt(bank2) = 0 &
       numCannibalsAt(bank1) = 3 & numCannibalsAt(bank2) = 0;
    0: cross(boat) & onboard(boat, m1) & onboard(boat, m2) & onboard(boat, c1);
    maxstep: loc_member(m1) = bank2 & loc_member(m2) = bank2 & loc_member(c1) = bank2.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Sample Query 4: Test that moving one cannibal to bank2 is allowed and the constraints on bank1 are maintained. (satisfiable)
:- query
    0: loc_member(m1) = bank1 & loc_member(m2) = bank1 & loc_member(m3) = bank1 &
       loc_member(c1) = bank1 & loc_member(c2) = bank1 & loc_member(c3) = bank1 &
       loc_vessel(boat) = bank1 &
       hasHat(m1) = hat1 & hasHat(m2) = hat2 & hasHat(m3) = hat3 &
       hasHat(c1) = hat4 & hasHat(c2) = hat5 & hasHat(c3) = hat6 &
       numMissionariesAt(bank1) = 3 & numMissionariesAt(bank2) = 0 &
       numCannibalsAt(bank1) = 3 & numCannibalsAt(bank2) = 0;
    0: cross(boat) & onboard(boat, c1);
    maxstep: loc_member(c1) = bank2 &
             numMissionariesAt(bank1) = 3 & numMissionariesAt(bank2) = 0 &
             numCannibalsAt(bank1) = 2 & numCannibalsAt(bank2) = 1.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank1 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank1 loc_vessel(boat)=bank1 numCannibalsAt(bank1)=3 numCannibalsAt(bank2)=0 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

	ACTIONS:  cross(boat) onboard(boat, c1)

	1:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank2 loc_member(c2)=bank1 loc_member(c3)=bank1 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank1 loc_vessel(boat)=bank2 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

SATISFIABLE
Models       : 1+


% Sample Query 5: Test that exchanging hats between two members at different locations is not allowed. (unsatisfiable)
:- query
    0: loc_member(m1) = bank1 & loc_member(m2) = bank1 & loc_member(m3) = bank1 &
       loc_member(c1) = bank2 & loc_member(c2) = bank1 & loc_member(c3) = bank1 &
       loc_vessel(boat) = bank1 &
       hasHat(m1) = hat1 & hasHat(m2) = hat2 & hasHat(m3) = hat3 &
       hasHat(c1) = hat4 & hasHat(c2) = hat5 & hasHat(c3) = hat6 &
       numMissionariesAt(bank1) = 3 & numMissionariesAt(bank2) = 0 &
       numCannibalsAt(bank1) = 2 & numCannibalsAt(bank2) = 1;
    0: exchangeHat(m1, c1);
    maxstep: hasHat(m1) = H1 & hasHat(c1) = H2.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.






:- query
    0: loc_member(m1) = bank1 & loc_member(m2) = bank1 & loc_member(m3) = bank1 &
       loc_member(c1) = bank1 & loc_member(c2) = bank1 & loc_member(c3) = bank1 &
       loc_vessel(boat) = bank1 &
       hasHat(m1) = hat1 & hasHat(m2) = hat2 & hasHat(m3) = hat3 &
       hasHat(c1) = hat4 & hasHat(c2) = hat5 & hasHat(c3) = hat6 &
       numMissionariesAt(bank1) = 3 & numMissionariesAt(bank2) = 0 &
       numCannibalsAt(bank1) = 3 & numCannibalsAt(bank2) = 0;

    maxstep: loc_member(m1) = bank2 & loc_member(m2) = bank2 & loc_member(m3) = bank2 &
             loc_member(c1) = bank2 & loc_member(c2) = bank2 & loc_member(c3) = bank2.



Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank1 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank1 loc_vessel(boat)=bank1 numCannibalsAt(bank1)=3 numCannibalsAt(bank2)=0 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

	ACTIONS:  cross(boat) onboard(boat, c3) onboard(boat, m1)

	1:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank2 loc_member(m1)=bank2 loc_member(m2)=bank1 loc_member(m3)=bank1 loc_vessel(boat)=bank2 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=2 numMissionariesAt(bank2)=1

	ACTIONS:  cross(boat) onboard(boat, m1)

	2:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank2 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank1 loc_vessel(boat)=bank1 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

	ACTIONS:  cross(boat) onboard(boat, m2) onboard(boat, m3)

	3:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank2 loc_member(m1)=bank1 loc_member(m2)=bank2 loc_member(m3)=bank2 loc_vessel(boat)=bank2 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=2 numMissionariesAt(bank2)=1

	ACTIONS:  cross(boat) onboard(boat, m2)

	4:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank2 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank2 loc_vessel(boat)=bank1 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

	ACTIONS:  cross(boat) onboard(boat, m1) onboard(boat, m2)

	5:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank2 loc_member(m1)=bank2 loc_member(m2)=bank2 loc_member(m3)=bank2 loc_vessel(boat)=bank2 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=2 numMissionariesAt(bank2)=1

	ACTIONS:  cross(boat) onboard(boat, m1)

	6:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank1 loc_member(c2)=bank1 loc_member(c3)=bank2 loc_member(m1)=bank1 loc_member(m2)=bank2 loc_member(m3)=bank2 loc_vessel(boat)=bank1 numCannibalsAt(bank1)=2 numCannibalsAt(bank2)=1 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

	ACTIONS:  cross(boat) onboard(boat, c1) onboard(boat, c2)

	7:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank2 loc_member(c2)=bank2 loc_member(c3)=bank2 loc_member(m1)=bank1 loc_member(m2)=bank2 loc_member(m3)=bank2 loc_vessel(boat)=bank2 numCannibalsAt(bank1)=1 numCannibalsAt(bank2)=2 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

	ACTIONS:  cross(boat) onboard(boat, m2)

	8:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank2 loc_member(c2)=bank2 loc_member(c3)=bank2 loc_member(m1)=bank1 loc_member(m2)=bank1 loc_member(m3)=bank2 loc_vessel(boat)=bank1 numCannibalsAt(bank1)=1 numCannibalsAt(bank2)=2 numMissionariesAt(bank1)=4 numMissionariesAt(bank2)=-1

	ACTIONS:  cross(boat) onboard(boat, m1) onboard(boat, m2)

	9:  hasHat(c1)=hat4 hasHat(c2)=hat5 hasHat(c3)=hat6 hasHat(m1)=hat1 hasHat(m2)=hat2 hasHat(m3)=hat3 loc_member(c1)=bank2 loc_member(c2)=bank2 loc_member(c3)=bank2 loc_member(m1)=bank2 loc_member(m2)=bank2 loc_member(m3)=bank2 loc_vessel(boat)=bank2 numCannibalsAt(bank1)=1 numCannibalsAt(bank2)=2 numMissionariesAt(bank1)=3 numMissionariesAt(bank2)=0

SATISFIABLE
Models       : 1+

