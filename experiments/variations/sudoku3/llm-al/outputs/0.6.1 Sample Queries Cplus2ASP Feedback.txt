% Query 1: Assign value 5 to cell (0,0) when no constraints are violated. (satisfiable)
:- query
    0: value(1,0)=3 & value(0,2)=4;
    0: assignValue(0,0,5);
    maxstep: value(0,0)=5.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 2: Try to assign value 5 to cell (0,0) when another cell in the same row already has value 5. (unsatisfiable)
:- query
    0: value(0,1)=5;
    0: assignValue(0,0,5).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 3: Try to assign value 5 to cell (0,0) when another cell in the same column already has value 5. (unsatisfiable)
:- query
    0: value(1,0)=5;
    0: assignValue(0,0,5).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 4: Try to assign value 5 to cell (0,0) when another cell in the same 3x3 square already has value 5. (unsatisfiable)
:- query
    0: value(1,1)=5;
    0: assignValue(0,0,5).

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 5: Assign value 5 to cell (0,0) when the same value exists in a different 3x3 square. (satisfiable)
:- query
    0: value(3,3)=5;
    0: assignValue(0,0,5);
    maxstep: value(0,0)=5.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.






:- query
    0: value(0,1)=4 & value(0,3)=1 & value(0,7)=5 &
       value(1,0)=1 & value(1,2)=7 & value(1,5)=3 & value(1,6)=9 & value(1,7)=6 &
       value(2,0)=5 & value(2,1)=2 & value(2,5)=8 &
       value(3,7)=1 & value(3,8)=7 &
       value(4,3)=9 & value(4,5)=6 & value(4,6)=8 &
       value(5,0)=8 & value(5,2)=3 & value(5,4)=5 & value(5,6)=6 & value(5,7)=2 &
       value(6,1)=9 & value(6,4)=6 & value(6,6)=5 & value(6,7)=4 & value(6,8)=3 &
       value(7,0)=6 & value(7,4)=8 & value(7,6)=7 &
       value(8,0)=2 & value(8,1)=5 & value(8,4)=9 & value(8,5)=7 & value(8,6)=1;

    maxstep: value(R, C) = V.

Cplus2ASP Output:

TIMEOUT
