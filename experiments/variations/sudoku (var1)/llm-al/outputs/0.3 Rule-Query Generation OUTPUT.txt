% constraints/rules

% 1. Setting a value at (row, column) causes the value at that cell to be the specified value.
setValue(R,C,V) causes val(R,C)=V.

% 2. Setting a value at (row, column) is not executable if the cell at (row, column) already has a value.
nonexecutable setValue(R,C,V) if val(R,C)=V1.

% 3. Setting a value at (row, column) is not executable if another cell in the same row already has that value.
nonexecutable setValue(R,C,V) if val(R,C1)=V & C1\=C.

% 4. Setting a value at (row, column) is not executable if another cell in the same column already has that value.
nonexecutable setValue(R,C,V) if val(R1,C)=V & R1\=R.

% 5. Setting a value at (row, column) is not executable if another cell in the same 3x3 square already has that value.
nonexecutable setValue(R,C,V) if val(R1,C1)=V & (R1\=R | C1\=C) & (R//3 = R1//3) & (C//3 = C1//3).

% 6. It is impossible for two cells in the same row to have the same value.
impossible val(R,C)=V & val(R,C1)=V & C1\=C.

% 7. It is impossible for two cells in the same column to have the same value.
impossible val(R,C)=V & val(R1,C)=V & R1\=R.

% 8. It is impossible for two cells in the same 3x3 square to have the same value.
impossible val(R,C)=V & val(R1,C1)=V & (R1\=R | C1\=C) & (R//3 = R1//3) & (C//3 = C1//3).

% query

:- query
    0: val(0,2)=9 & val(0,4)=2 & val(0,5)=8 & val(0,6)=7 &
       val(1,0)=8 & val(1,2)=6 & val(1,5)=4 & val(1,8)=5 &
       val(2,2)=3 & val(2,8)=4 &
       val(3,0)=6 &
       val(4,1)=2 & val(4,3)=7 & val(4,4)=1 & val(4,5)=3 & val(4,6)=4 & val(4,7)=5 &
       val(5,8)=2 &
       val(6,0)=3 & val(6,6)=5 &
       val(7,0)=9 & val(7,3)=4 & val(7,6)=8 & val(7,8)=7 &
       val(8,2)=1 & val(8,3)=2 & val(8,4)=5 & val(8,6)=3;