def solve_hanoi(n, source, target, auxiliary):
    if n == 0:
        return []
    moves = []
    # Move n-1 disks from source to auxiliary, so they are out of the way
    moves += solve_hanoi(n-1, source, auxiliary, target)
    # Move the nth disk from source to target
    moves.append((source, target))
    # Move the n-1 disks from auxiliary to target
    moves += solve_hanoi(n-1, auxiliary, target, source)
    return moves

# Number of disks
n_disks = 3
# Initial positions (peg names)
source_peg = 'a'
target_peg = 'c'
auxiliary_peg = 'b'

# Generate the moves to solve the problem
hanoi_moves = solve_hanoi(n_disks, source_peg, target_peg, auxiliary_peg)
hanoi_moves