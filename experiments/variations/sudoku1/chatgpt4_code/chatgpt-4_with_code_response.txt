
ChatGPT

Analyzed

python
Always show details

Copy code
import numpy as np

def is_valid(board, r, c, num):
    # Check if the number is not already placed in the current row, current column and current 3x3 box
    box_row = r // 3 * 3
    box_col = c // 3 * 3
    if num in board[r] or num in board[:, c] or num in board[box_row:box_row+3, box_col:box_col+3]:
        return False
    return True

def sudoku_solver(board):
    for r in range(9):
        for c in range(9):
            if board[r, c] == -1:  # Find an empty cell (denoted by -1)
                for num in range(9):
                    if is_valid(board, r, c, num):
                        board[r, c] = num  # Try possible number
                        if sudoku_solver(board):  # Recursively try to finish solution
                            return True
                        board[r, c] = -1  # Backtrack
                return False  # Trigger backtracking if no number is valid
    return True  # If all cells are filled correctly

# Define the initial board with -1 for unknowns
initial_board = -np.ones((9,9), dtype=int)
# Given conditions
initial_board[0, 0] = 7
initial_board[1, 2] = 2
initial_board[1, 3] = 5
initial_board[2, 1] = 6
initial_board[2, 4] = 8
initial_board[2, 6] = 1
initial_board[3, 1] = 4
initial_board[3, 5] = 6
initial_board[4, 4] = 3
initial_board[4, 5] = 4
initial_board[4, 6] = 6
initial_board[5, 3] = 0
initial_board[5, 7] = 2
initial_board[6, 2] = 0
initial_board[6, 7] = 5
initial_board[6, 8] = 7
initial_board[7, 2] = 7
initial_board[7, 3] = 4
initial_board[7, 7] = 0
initial_board[8, 1] = 8
initial_board[8, 6] = 3

# Solve the Sudoku puzzle
sudoku_solver(initial_board)
initial_board
Result
array([[7, 0, 1, 6, 4, 2, 5, 3, 8],
       [8, 3, 2, 5, 7, 1, 0, 6, 4],
       [5, 6, 4, 3, 8, 0, 1, 7, 2],
       [0, 4, 3, 1, 2, 6, 7, 8, 5],
       [2, 5, 8, 7, 3, 4, 6, 1, 0],
       [1, 7, 6, 0, 5, 8, 4, 2, 3],
       [4, 1, 0, 8, 6, 3, 2, 5, 7],
       [3, 2, 7, 4, 1, 5, 8, 0, 6],
       [6, 8, 5, 2, 0, 7, 3, 4, 1]])
The Sudoku puzzle has been successfully solved. Here's the completed board:

diff
Copy code
7 0 1 | 6 4 2 | 5 3 8
8 3 2 | 5 7 1 | 0 6 4
5 6 4 | 3 8 0 | 1 7 2
------+-------+------
0 4 3 | 1 2 6 | 7 8 5
2 5 8 | 7 3 4 | 6 1 0
1 7 6 | 0 5 8 | 4 2 3
------+-------+------
4 1 0 | 8 6 3 | 2 5 7
3 2 7 | 4 1 5 | 8 0 6
6 8 5 | 2 0 7 | 3 4 1
Each row, column, and 3x3 box contains unique numbers from 0 to 8, fulfilling all the Sudoku constraints. â€‹