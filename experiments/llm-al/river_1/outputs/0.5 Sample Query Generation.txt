% Query 1: Try to move the boat while an item is boarding the boat at the same time. (unsatisfiable)
:- query
    0: loc(boat) = LeftBank & loc(mouse) = LeftBank & ~onBoat(mouse);
    1: moveBoat(RightBank) & boardBoat(mouse);

% Query 2: Try to board the boat with an item when another item is already on the boat. (unsatisfiable)
:- query
    0: loc(boat) = LeftBank & loc(mouse) = LeftBank & loc(cheese) = LeftBank & onBoat(mouse);
    1: boardBoat(cheese);

% Query 3: Try to board the boat with an item when the item is not on the same side as the boat. (unsatisfiable)
:- query
    0: loc(boat) = LeftBank & loc(mouse) = RightBank;
    1: boardBoat(mouse);

% Query 4: Successfully move the boat with the mouse from LeftBank to RightBank. (satisfiable)
:- query
    0: loc(boat) = LeftBank & loc(mouse) = LeftBank & ~onBoat(mouse);
    1: boardBoat(mouse);
    2: moveBoat(RightBank);
    3: unboardBoat(mouse);
    maxstep: loc(mouse) = RightBank & loc(boat) = RightBank & ~onBoat(mouse);

% Query 5: Try to move the boat when snake and mouse are left alone on a side without the boat. (unsatisfiable)
:- query
    0: loc(boat) = LeftBank & loc(snake) = LeftBank & loc(mouse) = LeftBank & loc(cheese) = RightBank &
       ~onBoat(snake) & ~onBoat(mouse) & ~onBoat(cheese);
    1: moveBoat(RightBank);