:- sorts
    int;
    value0 >> int;
    value >> value0;
    row >> int;
    column >> int.

% Now the objects


:- objects
    0..9 :: value0;
    1..9 :: value;
    0..8 :: row;
    0..8 :: column.


:- variables
    R, R1, R2, R3, R4 :: row;
    C, C1, C2, C3, C4 :: column;
    V, V1, V2, V3, V4 :: value;
    N1, N2, N3, N4 :: int.


:- constants
    assign(row, column, value) :: exogenousAction;
    valueAt(row, column) :: inertialFluent(value0).

% Generated constraints

% Default valueAt(R,C)=0 when no evidence to the contrary
default valueAt(R,C)=0.

% 1. Assigning a value to a cell causes the value at that cell to be that value.
assign(R,C,V) causes valueAt(R,C)=V.

% 2. Assigning a value to a cell is not executable if the cell already has a value assigned (non-zero).
nonexecutable assign(R,C,V) if valueAt(R,C)=V1 & V1\=0.

% 3. Assigning a value to a cell is not executable if the same value already exists in the same row.
nonexecutable assign(R,C,V) if valueAt(R,C1)=V & V\=0 & C1\=C.

% 4. Assigning a value to a cell is not executable if the same value already exists in the same column.
nonexecutable assign(R,C,V) if valueAt(R1,C)=V & V\=0 & R1\=R.

% 5. Assigning a value to a cell is not executable if the same value already exists in the same 3x3 square.
nonexecutable assign(R,C,V) if valueAt(R1,C1)=V & V\=0 & (R1\=R | C1\=C) & N1=R//3 & N2=R1//3 & N1=N2 & N3=C//3 & N4=C1//3 & N3=N4.

% 6. No two cells in the same row can have the same value.
impossible valueAt(R,C1)=V & valueAt(R,C2)=V & V\=0 & C1\=C2.

% 7. No two cells in the same column can have the same value.
impossible valueAt(R1,C)=V & valueAt(R2,C)=V & V\=0 & R1\=R2.

% 8. No two cells in the same 3x3 square can have the same value.
impossible valueAt(R1,C1)=V & valueAt(R2,C2)=V & V\=0 & (R1\=R2 | C1\=C2) & N1=R1//3 & N2=R2//3 & N1=N2 & N3=C1//3 & N4=C2//3 & N3=N4.

noconcurrency.

% Specify the initial known values and the goal that all cells are filled with values from 1 to 9 without conflicts.

% Initial conditions
initially valueAt(0,0)=8.
initially valueAt(1,2)=3.
initially valueAt(1,3)=6.
initially valueAt(2,1)=7.
initially valueAt(2,4)=9.
initially valueAt(2,6)=2.
initially valueAt(3,1)=5.
initially valueAt(3,5)=7.
initially valueAt(4,4)=4.
initially valueAt(4,5)=5.
initially valueAt(4,6)=7.
initially valueAt(5,3)=1.
initially valueAt(5,7)=3.
initially valueAt(6,2)=1.
initially valueAt(6,7)=6.
initially valueAt(6,8)=8.
initially valueAt(7,2)=8.
initially valueAt(7,3)=5.
initially valueAt(7,7)=1.
initially valueAt(8,1)=9.
initially valueAt(8,6)=4.

% Goal: All cells are filled with values from 1 to 9 (i.e., valueAt(R,C) != 0 for all R and C)
goal valueAt(R,C)\=0.
