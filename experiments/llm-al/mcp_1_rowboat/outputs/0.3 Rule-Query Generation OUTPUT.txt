% constraints/rules

% 1. Crossing a vessel causes the location of the vessel to change to the opposite bank.
cross(V) causes loc(V) = bank2 if loc(V) = bank1.
cross(V) causes loc(V) = bank1 if loc(V) = bank2.

% 2. Crossing a vessel decrements the number of missionaries at the starting location by numMissCrossing(V).
cross(V) decrements numMissAt(Loc1) by N if loc(V) = Loc1 & N = numMissCrossing(V).

% 3. Crossing a vessel increments the number of missionaries at the destination location by numMissCrossing(V).
cross(V) increments numMissAt(Loc2) by N if loc(V) = Loc1 & N = numMissCrossing(V) & ((Loc1 = bank1 & Loc2 = bank2) | (Loc1 = bank2 & Loc2 = bank1)).

% 4. Crossing a vessel decrements the number of cannibals at the starting location by numCannCrossing(V).
cross(V) decrements numCannAt(Loc1) by N if loc(V) = Loc1 & N = numCannCrossing(V).

% 5. Crossing a vessel increments the number of cannibals at the destination location by numCannCrossing(V).
cross(V) increments numCannAt(Loc2) by N if loc(V) = Loc1 & N = numCannCrossing(V) & ((Loc1 = bank1 & Loc2 = bank2) | (Loc1 = bank2 & Loc2 = bank1)).

% 6. The action cross(V) is not executable if numMissCrossing(V) + numCannCrossing(V) > 2.
nonexecutable cross(V) if N1 + N2 > 2 & N1 = numMissCrossing(V) & N2 = numCannCrossing(V).

% 7. The action cross(V) is not executable if numMissCrossing(V) + numCannCrossing(V) < 1.
nonexecutable cross(V) if N1 + N2 < 1 & N1 = numMissCrossing(V) & N2 = numCannCrossing(V).

% 8. The action cross(V) is not executable if numMissCrossing(V) < 0.
nonexecutable cross(V) if N1 < 0 & N1 = numMissCrossing(V).

% 9. The action cross(V) is not executable if numCannCrossing(V) < 0.
nonexecutable cross(V) if N1 < 0 & N1 = numCannCrossing(V).

% 10. The action cross(V) is not executable if numMissCrossing(V) > numMissAt(loc(V)).
nonexecutable cross(V) if N1 > N2 & N1 = numMissCrossing(V) & numMissAt(loc(V)) = N2.

% 11. The action cross(V) is not executable if numCannCrossing(V) > numCannAt(loc(V)).
nonexecutable cross(V) if N1 > N2 & N1 = numCannCrossing(V) & numCannAt(loc(V)) = N2.

% 12. The action cross(V) is not executable if, during the crossing, the number of cannibals on the vessel exceeds the number of missionaries on the vessel when there is at least one missionary on the vessel.
nonexecutable cross(V) if N1 > N2 & N2 >= 1 & N1 = numCannCrossing(V) & N2 = numMissCrossing(V).

% 13. After crossing, at any location, the number of cannibals cannot exceed the number of missionaries when there is at least one missionary at that location.
impossible N1 > N2 & N2 >= 1 & numCannAt(Loc) = N1 & numMissAt(Loc) = N2.

% 14. The number of missionaries at any location cannot be negative.
impossible N < 0 & numMissAt(Loc) = N.

% 15. The number of cannibals at any location cannot be negative.
impossible N < 0 & numCannAt(Loc) = N.

% 16. The total number of missionaries at both locations must always sum to three.
always N1 + N2 = 3 & numMissAt(bank1) = N1 & numMissAt(bank2) = N2.

% 17. The total number of cannibals at both locations must always sum to three.
always N1 + N2 = 3 & numCannAt(bank1) = N1 & numCannAt(bank2) = N2.

% query
:- query
    0: numMissAt(bank1) = 3 & numCannAt(bank1) = 3 & numMissAt(bank2) = 0 & numCannAt(bank2) = 0 & loc(rowboat) = bank1;
    maxstep: numMissAt(bank2) = 3 & numCannAt(bank2) = 3.