% Query 1: Can the boat cross from bank1 to bank2 with one missionary and one cannibal on board, with a missionary rowing? (satisfiable)
:- query
    0: numAt(missionaries, bank1) = 3 & numAt(cannibals, bank1) = 3 & boatLoc = bank1;
    0: cross(boat) &
       numCrossing(boat, missionaries) = 1 &
       numCrossing(boat, cannibals) = 1 &
       rower(boat, missionaries) = true &
       rower(boat, cannibals) = false.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  boatLoc=bank1 capacity(boat)=2 numAt(cannibals, bank1)=3 numAt(cannibals, bank2)=-3 numAt(missionaries, bank1)=3 numAt(missionaries, bank2)=5

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=1 numCrossing(boat, missionaries)=1 rower(boat, missionaries)

	1:  boatLoc=bank2 capacity(boat)=2 numAt(cannibals, bank1)=2 numAt(cannibals, bank2)=-2 numAt(missionaries, bank1)=2 numAt(missionaries, bank2)=6

SATISFIABLE
Models       : 1+


% Query 2: Try to cross the boat from bank1 to bank2 with two missionaries and one cannibal on board, exceeding the boat's capacity. (unsatisfiable)
:- query
    0: numAt(missionaries, bank1) = 3 & numAt(cannibals, bank1) = 3 & boatLoc = bank1;
    0: cross(boat) &
       numCrossing(boat, missionaries) = 2 &
       numCrossing(boat, cannibals) = 1 &
       rower(boat, missionaries) = true &
       rower(boat, cannibals) = false.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 3: Try to cross the boat from bank1 to bank2 with one cannibal on board, but with no one rowing. (unsatisfiable)
:- query
    0: numAt(missionaries, bank1) = 3 & numAt(cannibals, bank1) = 3 & boatLoc = bank1;
    0: cross(boat) &
       numCrossing(boat, missionaries) = 0 &
       numCrossing(boat, cannibals) = 1 &
       rower(boat, missionaries) = false &
       rower(boat, cannibals) = false.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 4: Try to cross the boat empty from bank1 to bank2. (unsatisfiable)
:- query
    0: numAt(missionaries, bank1) = 3 & numAt(cannibals, bank1) = 3 & boatLoc = bank1;
    0: cross(boat) &
       numCrossing(boat, missionaries) = 0 &
       numCrossing(boat, cannibals) = 0 &
       rower(boat, missionaries) = false &
       rower(boat, cannibals) = false.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 5: Try to cross the boat with one missionary and one cannibal on board, with both a missionary and a cannibal rowing. (unsatisfiable)
:- query
    0: numAt(missionaries, bank1) = 3 & numAt(cannibals, bank1) = 3 & boatLoc = bank1;
    0: cross(boat) &
       numCrossing(boat, missionaries) = 1 &
       numCrossing(boat, cannibals) = 1 &
       rower(boat, missionaries) = true &
       rower(boat, cannibals) = true.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.






:- query
    0: numAt(missionaries, bank1) = 3 & numAt(cannibals, bank1) = 3 & numAt(missionaries, bank2) = 0 & numAt(cannibals, bank2) = 0 & boatLoc = bank1;
    maxstep: numAt(missionaries, bank2) = 3 & numAt(cannibals, bank2) = 3 & boatLoc = bank2.


Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  boatLoc=bank1 capacity(boat)=2 numAt(cannibals, bank1)=3 numAt(cannibals, bank2)=0 numAt(missionaries, bank1)=3 numAt(missionaries, bank2)=0

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=2 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	1:  boatLoc=bank2 capacity(boat)=2 numAt(cannibals, bank1)=1 numAt(cannibals, bank2)=2 numAt(missionaries, bank1)=3 numAt(missionaries, bank2)=0

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=1 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	2:  boatLoc=bank1 capacity(boat)=2 numAt(cannibals, bank1)=2 numAt(cannibals, bank2)=1 numAt(missionaries, bank1)=3 numAt(missionaries, bank2)=0

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=2 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	3:  boatLoc=bank2 capacity(boat)=2 numAt(cannibals, bank1)=0 numAt(cannibals, bank2)=3 numAt(missionaries, bank1)=3 numAt(missionaries, bank2)=0

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=1 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	4:  boatLoc=bank1 capacity(boat)=2 numAt(cannibals, bank1)=1 numAt(cannibals, bank2)=2 numAt(missionaries, bank1)=3 numAt(missionaries, bank2)=0

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=0 numCrossing(boat, missionaries)=2 rower(boat, missionaries)

	5:  boatLoc=bank2 capacity(boat)=2 numAt(cannibals, bank1)=1 numAt(cannibals, bank2)=2 numAt(missionaries, bank1)=1 numAt(missionaries, bank2)=2

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=1 numCrossing(boat, missionaries)=1 rower(boat, cannibals)

	6:  boatLoc=bank1 capacity(boat)=2 numAt(cannibals, bank1)=2 numAt(cannibals, bank2)=1 numAt(missionaries, bank1)=2 numAt(missionaries, bank2)=1

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=0 numCrossing(boat, missionaries)=2 rower(boat, missionaries)

	7:  boatLoc=bank2 capacity(boat)=2 numAt(cannibals, bank1)=2 numAt(cannibals, bank2)=1 numAt(missionaries, bank1)=0 numAt(missionaries, bank2)=3

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=1 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	8:  boatLoc=bank1 capacity(boat)=2 numAt(cannibals, bank1)=3 numAt(cannibals, bank2)=0 numAt(missionaries, bank1)=0 numAt(missionaries, bank2)=3

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=2 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	9:  boatLoc=bank2 capacity(boat)=2 numAt(cannibals, bank1)=1 numAt(cannibals, bank2)=2 numAt(missionaries, bank1)=0 numAt(missionaries, bank2)=3

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=1 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	10:  boatLoc=bank1 capacity(boat)=2 numAt(cannibals, bank1)=2 numAt(cannibals, bank2)=1 numAt(missionaries, bank1)=0 numAt(missionaries, bank2)=3

	ACTIONS:  cross(boat) numCrossing(boat, cannibals)=2 numCrossing(boat, missionaries)=0 rower(boat, cannibals)

	11:  boatLoc=bank2 capacity(boat)=2 numAt(cannibals, bank1)=0 numAt(cannibals, bank2)=3 numAt(missionaries, bank1)=0 numAt(missionaries, bank2)=3

SATISFIABLE
Models       : 1+

