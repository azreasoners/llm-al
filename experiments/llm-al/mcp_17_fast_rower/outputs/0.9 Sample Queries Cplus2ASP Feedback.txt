% Query 1: Cross one missionary and one cannibal from bank1 to bank2 at step 0. (satisfiable)
:- query
    0: loc(boat) = bank1 &
       numAt(missionaries, bank1) = 3 &
       numAt(strongMissionary, bank1) = 1 &
       numAt(cannibals, bank1) = 4 &
       numAt(missionaries, bank2) = 0 &
       numAt(strongMissionary, bank2) = 0 &
       numAt(cannibals, bank2) = 0;

    0: cross(boat) &
       numCrossing(boat, missionaries) = 1 &
       numCrossing(boat, cannibals) = 1 &
       numCrossing(boat, strongMissionary) = 0 &
       toLocation(boat) = bank2;

    1: loc(boat) = bank2 &
       numAt(missionaries, bank1) = 2 &
       numAt(cannibals, bank1) = 3 &
       numAt(missionaries, bank2) = 1 &
       numAt(cannibals, bank2) = 1.

Cplus2ASP Output:

Solving...
Solution: 1
	

	0:  capacity(boat)=2 loc(boat)=bank1 numAt(cannibals, bank1)=4 numAt(cannibals, bank2)=0 numAt(missionaries, bank1)=3 numAt(missionaries, bank2)=0 numAt(strongMissionary, bank1)=1 numAt(strongMissionary, bank2)=0

	ACTIONS:  cross(boat) toLocation(boat)=bank2 numCrossing(boat, cannibals)=1 numCrossing(boat, missionaries)=1 numCrossing(boat, strongMissionary)=0

	1:  capacity(boat)=2 loc(boat)=bank2 numAt(cannibals, bank1)=3 numAt(cannibals, bank2)=1 numAt(missionaries, bank1)=2 numAt(missionaries, bank2)=1 numAt(strongMissionary, bank1)=1 numAt(strongMissionary, bank2)=0

SATISFIABLE
Models       : 1


% Query 2: Attempt to cross a single missionary alone from bank1 to bank2 at step 0. (unsatisfiable)
:- query
    0: loc(boat) = bank1 &
       numAt(missionaries, bank1) = 3 &
       numAt(strongMissionary, bank1) = 1 &
       numAt(cannibals, bank1) = 4 &
       numAt(missionaries, bank2) = 0 &
       numAt(strongMissionary, bank2) = 0 &
       numAt(cannibals, bank2) = 0;

    0: cross(boat) &
       numCrossing(boat, missionaries) = 1 &
       numCrossing(boat, cannibals) = 0 &
       numCrossing(boat, strongMissionary) = 0 &
       toLocation(boat) = bank2;

    1: loc(boat) = bank2 &
       numAt(missionaries, bank1) = 2 &
       numAt(cannibals, bank1) = 4 &
       numAt(missionaries, bank2) = 1.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 3: Attempt to cross the boat with no one on board from bank1 to bank2 at step 0. (unsatisfiable)
:- query
    0: loc(boat) = bank1 &
       numAt(missionaries, bank1) = 3 &
       numAt(strongMissionary, bank1) = 1 &
       numAt(cannibals, bank1) = 4;

    0: cross(boat) &
       numCrossing(boat, missionaries) = 0 &
       numCrossing(boat, cannibals) = 0 &
       numCrossing(boat, strongMissionary) = 0 &
       toLocation(boat) = bank2;

    1: loc(boat) = bank2.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 4: Attempt to cross three people (two missionaries and one cannibal) from bank1 to bank2 at step 0. (unsatisfiable)
:- query
    0: loc(boat) = bank1 &
       numAt(missionaries, bank1) = 3 &
       numAt(strongMissionary, bank1) = 1 &
       numAt(cannibals, bank1) = 4;

    0: cross(boat) &
       numCrossing(boat, missionaries) = 2 &
       numCrossing(boat, cannibals) = 1 &
       numCrossing(boat, strongMissionary) = 0 &
       toLocation(boat) = bank2.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.



% Query 5: Attempt to cross five cannibals from bank1 to bank2 when there are only four cannibals at bank1 at step 0. (unsatisfiable)
:- query
    0: loc(boat) = bank1 &
       numAt(cannibals, bank1) = 4;

    0: cross(boat) &
       numCrossing(boat, missionaries) = 0 &
       numCrossing(boat, cannibals) = 5 &
       numCrossing(boat, strongMissionary) = 0 &
       toLocation(boat) = bank2.

Cplus2ASP Output:

Solving...
UNSATISFIABLE
Models       : 0
No solution.






% Four missionaries and four cannibals are at location bank1. The boat is at location bank1. Find a plan so that all missionaries and all cannibals are at location bank2. 

:- query
    0: loc(boat) = bank1 &
       numAt(missionaries, bank1) = 3 &
       numAt(strongMissionary, bank1) = 1 &
       numAt(cannibals, bank1) = 4 &
       numAt(missionaries, bank2) = 0 &
       numAt(strongMissionary, bank2) = 0 &
       numAt(cannibals, bank2) = 0;
    maxstep: numAt(missionaries, bank2) = 3 &
             numAt(strongMissionary, bank2) = 1 &
             numAt(cannibals, bank2) = 4.


Cplus2ASP Output:

TIMEOUT
