% Query 1: Successfully transport the mouse to the right bank (satisfiable)
:- query
    0: loc(mouse)=leftBank & loc(snake)=leftBank & loc(cheese)=leftBank & loc(boat)=leftBank &
       ~onBoat(mouse) & ~onBoat(snake) & ~onBoat(cheese);
    0: load(mouse);
    1: moveBoat(rightBank);
    2: unload(mouse);

% Query 2: Attempt to load mouse and cheese onto the boat simultaneously (unsatisfiable)
:- query
    0: loc(mouse)=leftBank & loc(snake)=leftBank & loc(cheese)=leftBank & loc(boat)=leftBank &
       ~onBoat(mouse) & ~onBoat(snake) & ~onBoat(cheese);
    0: load(mouse);
    0: load(cheese);

% Query 3: Leaving mouse and cheese alone on left bank without boat (unsatisfiable)
:- query
    0: loc(mouse)=leftBank & loc(snake)=leftBank & loc(cheese)=leftBank & loc(boat)=leftBank &
       ~onBoat(mouse) & ~onBoat(snake) & ~onBoat(cheese);
    0: load(snake);
    1: moveBoat(rightBank);
    2: unload(snake);

% Query 4: Attempt to unload the mouse when it is not on the boat (unsatisfiable)
:- query
    0: loc(mouse)=leftBank & loc(snake)=leftBank & loc(cheese)=leftBank & loc(boat)=leftBank &
       ~onBoat(mouse) & ~onBoat(snake) & ~onBoat(cheese);
    0: unload(mouse);

% Query 5: Attempt to load the cheese when the boat and cheese are on opposite sides (unsatisfiable)
:- query
    0: loc(mouse)=leftBank & loc(snake)=leftBank & loc(cheese)=rightBank & loc(boat)=leftBank &
       ~onBoat(mouse) & ~onBoat(snake) & ~onBoat(cheese);
    0: load(cheese);